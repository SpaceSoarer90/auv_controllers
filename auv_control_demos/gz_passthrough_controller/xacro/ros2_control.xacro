<?xml version="1.0"?>
<robot xmlns:xacro="https://www.ros.org/wiki/xacro">
  <xacro:arg name="yaml_file" default="gz_passthrough_chained.yaml"/>
  <!-- there is no convention set in place to pass around hydrodynamics -->
  <!-- parameters so you gotta define it for the sim and for the plugin controller -->
  <!-- https://github.com/Robotic-Decision-Making-Lab/hydrodynamics -->
  <!-- <xacro:include filename="$(find auv_control_demos)/xacro/ros2_control/cartesian_joints.xacro" /> -->
  <xacro:include filename="$(find auv_control_demos)/xacro/ros2_control/hydrodynamics.xacro" />

  <ros2_control name="SisidSimStateInterfaces" type="system">
    <hardware>
      <plugin>gz_ros2_control/GazeboSimSystem</plugin>
    </hardware>

    <joint name="left_thruster_prop_joint">
      <!-- figure out a way for it to take just the velocity from joint_states (or dynamic_joint_states?) -->
      <!-- <state_interface name="velocity" /> -->
      <state_interface name="position" />
    </joint>
    <joint name="right_thruster_prop_joint">
      <state_interface name="position" />
    </joint>
    <joint name="vert_thruster_prop_joint">
      <state_interface name="position" />
    </joint>
  </ros2_control>

  <gazebo>
    <plugin filename="libgz_ros2_control-system.so" name="gz_ros2_control::GazeboSimROS2ControlPlugin">
      <!-- TODO make all parameters and files local to this package -->
      <parameters>$(find auv_control_demos)/config/$(arg yaml_file)</parameters>
    </plugin>
  </gazebo>
</robot>
